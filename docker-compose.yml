networks:
  graphsense-net:
    driver: bridge
    name: graphsense-avian-net

volumes:
  cassandra_data:
    driver: local
  spark_data:
    driver: local
  graphsense_config:
    driver: local
  avian_data:
    driver: local
  tagstore_data:
    driver: local

services:
  # ================================
  # INFRASTRUCTURE SERVICES
  # ================================

  cassandra:
    image: cassandra:3.11
    container_name: cassandra-avian
    hostname: cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=GraphSenseCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - MAX_HEAP_SIZE=2G
      - HEAP_NEWSIZE=200M
    volumes:
      - cassandra_data:/var/lib/cassandra
    ports:
      - "9042:9042"
    networks:
      - graphsense-net
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  spark-master:
    image: bitnami/spark:3.4
    container_name: spark-master-avian
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - spark_data:/opt/bitnami/spark/data
    networks:
      - graphsense-net
    restart: unless-stopped

  spark-worker-1:
    image: bitnami/spark:3.4
    container_name: spark-worker-1-avian
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    volumes:
      - spark_data:/opt/bitnami/spark/data
    networks:
      - graphsense-net
    restart: unless-stopped

  # ================================
  # GRAPHSENSE CORE SERVICES
  # ================================

  graphsense-lib:
    build:
      context: .
      dockerfile: docker/graphsense-lib.Dockerfile
    container_name: graphsense-lib-avian
    hostname: graphsense-lib
    environment:
      - GRAPHSENSE_CONFIG_FILE=/app/config/config.yaml
      - AVIAN_RPC_HOST=${AVIAN_RPC_HOST:-localhost}
      - AVIAN_RPC_PORT=${AVIAN_RPC_PORT:-7896}
      - AVIAN_RPC_USER=${AVIAN_RPC_USER:-graphsense}
      - AVIAN_RPC_PASSWORD=${AVIAN_RPC_PASSWORD:-secure_password}
      - CASSANDRA_HOST=cassandra
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - graphsense_config:/app/config
      - ./config/graphsense-lib:/app/config
    depends_on:
      cassandra:
        condition: service_healthy
      spark-master:
        condition: service_started
    networks:
      - graphsense-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    command: ["tail", "-f", "/dev/null"] # Keep container running for CLI commands

  graphsense-rest:
    build:
      context: ./graphsense-REST
      dockerfile: Dockerfile
    container_name: graphsense-rest-avian
    hostname: graphsense-rest
    environment:
      - NUM_WORKERS=${REST_WORKERS:-4}
      - NUM_THREADS=${REST_THREADS:-4}
      - CONFIG_FILE=/srv/graphsense-rest/instance/config.yaml
    volumes:
      - ./config/graphsense-rest/config.yaml:/srv/graphsense-rest/instance/config.yaml:ro
    ports:
      - "9000:9000"
    depends_on:
      cassandra:
        condition: service_healthy
      tagstore:
        condition: service_started
    networks:
      - graphsense-net
    restart: unless-stopped

  # TagStore PostgreSQL database for GraphSense REST API
  tagstore:
    image: postgres:13
    container_name: tagstore-avian
    hostname: tagstore
    environment:
      - POSTGRES_DB=tagstore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - tagstore_data:/var/lib/postgresql/data
    networks:
      - graphsense-net
    restart: unless-stopped

  graphsense-dashboard:
    build:
      context: ./graphsense-dashboard
      dockerfile: ../docker/graphsense-dashboard-alpine.Dockerfile
    container_name: graphsense-dashboard-avian
    hostname: graphsense-dashboard
    environment:
      - REST_URL=http://graphsense-rest:9000
    ports:
      - "8081:8000"
    depends_on:
      - graphsense-rest
    networks:
      - graphsense-net
    restart: unless-stopped

  # ================================
  # OPTIONAL SERVICES
  # ================================

  # Avian Client (Reference - External node preferred)
  # avian-client:
  #   build:
  #     context: ./avian-client
  #     dockerfile: Dockerfile
  #   container_name: avian-client
  #   hostname: avian-client
  #   ports:
  #     - "7896:7896"
  #   volumes:
  #     - avian_data:/opt/avian/data
  #     - ./config/avian/avian.conf:/opt/avian/avian.conf:ro
  #   networks:
  #     - graphsense-net
  #   restart: unless-stopped

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-avian
    hostname: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - graphsense-net
    restart: unless-stopped
    profiles: ["monitoring"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-avian
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana:/etc/grafana/provisioning:ro
    networks:
      - graphsense-net
    restart: unless-stopped
    profiles: ["monitoring"]
